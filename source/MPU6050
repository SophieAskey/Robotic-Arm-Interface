#include <Wire.h> // library for i2c communication
#include <Servo.h> // library for servo
#include <MPU6050.h>
class MPU_6050 
{
  public:
    Servo wrist;
    MPU6050 sensor;
    int16_t ax, ay, az; // the values will be unsigned 16 bit integers
    int16_t gx, gy, gz;
    int16_t roll;
    int16_t pitch;
    int16_t gyro_vals[3];
    int16_t accel_vals[3];


   MPU_6050(int servo_pin){
     Wire.begin();
     sensor.initialize();
     wrist.attach(servo_pin);
   }
  
     int16_t get_Gyro() { // get motion function in class

     sensor.getMotion6(&ax, &ay, &az, &gx, &gy, &gz); // getting raw x,y,z values from gyroscope & accelerometer
     delay(200);
     gyro_vals[0] = gx;
     gyro_vals[1] = gy;
     gyro_vals[2] = gz;
     return gyro_vals;
   }
    int16_t get_Acceleration() { // get motion function in class
     sensor.getMotion6(&ax, &ay, &az, &gx, &gy, &gz); // getting raw x,y,z values from gyroscope & accelerometer
     delay(200);
     accel_vals[0] = ax;
     accel_vals[1] = ay; 
     accel_vals[2] = az;
     return accel_vals;
   }
   
     int16_t get_Pitch() { // get pitch function in class

     sensor.getMotion6(&ax, &ay, &az, &gx, &gy, &gz); // getting raw x,y,z values from gyroscope & accelerometer
     delay(200);
     pitch = map(ay, -17000, 17000, 0, 180);
     return pitch;
   }
      int16_t get_Roll() { // get roll function in class

     sensor.getMotion6(&ax, &ay, &az, &gx, &gy, &gz); // getting raw x,y,z values from gyroscope & accelerometer
     delay(200);
     roll = map(ax, -17000, 17000, 0, 180);;
     return roll;
   }
   
};
